{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React App\\\\app\\\\src\\\\components\\\\quiz\\\\Question.jsx\";\nimport React, { Component } from 'react';\nimport { Button, ListGroup, ListGroupItem, Well, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar results = [];\nclass Question extends Component {\n  onChange(choice, event) {\n    event.preventDefault();\n    const {\n      setCurrent,\n      setScore,\n      question\n    } = this.props;\n    if (choice === question.correct) {\n      results.push('✓');\n      setScore(this.props.score + 1);\n      setCurrent(this.props.current + 1);\n    } else if (choice !== question.correct) {\n      results.push('X');\n      setCurrent(this.props.current + 1);\n    } else {\n      console.log('not right or wrong');\n      setCurrent(this.props.current + 1);\n    }\n  }\n  shuffleChoices(choices) {\n    for (let index = choices.length - 1; index > 0; index--) {\n      let index_2 = Math.floor(Math.random() * (index + 1));\n      let temp = choices[index];\n      choices[index] = choices[index_2];\n      choices[index_2] = temp;\n    }\n    return choices;\n  }\n  render() {\n    const {\n      question\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [results.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Well, {\n        bsStyle: \"small\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"center\",\n            children: results.map((result, index) => {\n              if (result === 'X') {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: style.wrong,\n                  children: `   ${result}   `\n                }, `wrong-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 53\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: style.correct,\n                  children: `   ${result}   `\n                }, `correct_${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 53\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Well, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: this.shuffleChoices(question.choices).map((choice, index) => {\n            const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n            return /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              onClick: this.onChange.bind(this, choice.text),\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                bsStyle: 'primary',\n                name: question.id,\n                children: alphabet[index]\n              }, `choice_button_${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"choice\",\n                children: choice.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this)]\n            }, `choice_${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"category\",\n            md: 11,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Category: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), question.category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"difficulty\",\n            md: 1,\n            children: question.difficulty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst style = {\n  correct: {\n    color: '#008000'\n  },\n  wrong: {\n    color: '#FF0000'\n  }\n};\nexport default Question;","map":{"version":3,"names":["React","Component","Button","ListGroup","ListGroupItem","Well","Row","Col","jsxDEV","_jsxDEV","results","Question","onChange","choice","event","preventDefault","setCurrent","setScore","question","props","correct","push","score","current","console","log","shuffleChoices","choices","index","length","index_2","Math","floor","random","temp","render","children","fileName","_jsxFileName","lineNumber","columnNumber","bsStyle","className","map","result","style","wrong","text","alphabet","split","onClick","bind","name","id","md","category","difficulty","color"],"sources":["C:/Users/user/Desktop/React App/app/src/components/quiz/Question.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { Button, ListGroup, ListGroupItem, Well, Row, Col } from 'react-bootstrap'\n\nvar results = []\n\nclass Question extends Component {\n    onChange(choice, event) {\n        event.preventDefault()\n        const { setCurrent, setScore, question } = this.props\n        if (choice === question.correct) {\n            results.push('✓')\n            setScore(this.props.score + 1)\n            setCurrent(this.props.current + 1)\n        } else if (choice !== question.correct) {\n            results.push('X')\n            setCurrent(this.props.current + 1)\n        } else {\n            console.log('not right or wrong')\n            setCurrent(this.props.current + 1)\n        }\n    }\n\n    shuffleChoices(choices) {\n        for (let index = choices.length - 1; index > 0; index--) {\n            let index_2 = Math.floor(Math.random() * (index + 1))\n            let temp = choices[index]\n            choices[index] = choices[index_2]\n            choices[index_2] = temp\n        }\n        return choices\n    }\n\n    render() {\n        const { question } = this.props\n        return (\n            <div>\n                {\n                    results.length === 0\n                        ? <div></div>\n                        : <Well bsStyle=\"small\">\n                            <div className=\"results\">\n                                <div className=\"center\">\n                                    {\n                                        results.map( (result, index) => {\n                                            if (result === 'X') {\n                                                return (\n                                                    <span key={`wrong-${index}`} style={style.wrong}>\n                                                        {`   ${result}   `}\n                                                    </span>\n                                                )\n                                            } else {\n                                                return (\n                                                    <span key={`correct_${index}`} style={style.correct}>\n                                                        {`   ${result}   `}\n                                                    </span>\n                                                )\n                                            }\n                                        })\n                                    }\n                                </div>\n                            </div>\n                        </Well>\n                }\n                <Well>\n                    <h3><center>{question.text}</center></h3>\n                    <hr />\n                    <ListGroup>\n                        {\n                            this.shuffleChoices(question.choices).map((choice, index) => {\n                                const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')\n                                return (\n                                    <ListGroupItem key={`choice_${index}`} onClick={this.onChange.bind(this, choice.text)}>\n                                        <Button\n                                            bsStyle={'primary'}\n                                            name={question.id}\n                                            key={`choice_button_${index}`}\n                                        >\n                                            {alphabet[index]}\n                                        </Button>\n                                        <span className=\"choice\">{choice.text}</span>\n                                    </ListGroupItem>\n                                )\n                            })\n                        }\n                    </ListGroup>\n                    <Row>\n                        <Col className=\"category\" md={11}>\n                            <strong>Category: </strong>{question.category}\n                        </Col>\n                        <Col className=\"difficulty\" md={1}>\n                            {question.difficulty}\n                        </Col>\n                    </Row>\n                </Well>\n            </div>\n        )\n    }\n}\n\nconst style = {\n    correct: {\n        color: '#008000'\n    },\n    wrong: {\n        color: '#FF0000'\n    }\n}\n\nexport default Question"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}