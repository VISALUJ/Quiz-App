{"ast":null,"code":"import axios from 'axios';\nconst getQuestionsFromAPI = async () => {\n  try {\n    const response = await axios.get('https://opentdb.com/api.php?amount=10');\n    return response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst decodeHTML = html => {\n  var txt = document.createElement(\"textarea\");\n  txt.innerHTML = html;\n  return txt.value;\n};\nconst formatChoices = choices => {\n  return choices.map((choice, index) => {\n    return {\n      text: decodeHTML(choice.trim())\n    };\n  });\n};\nconst combineAllChoices = question => question.correct_answer.split(',').concat(question.incorrect_answers);\nconst formatQuestion = (question, index) => {\n  return {\n    id: index,\n    category: question.category,\n    type: question.type,\n    difficulty: question.difficulty,\n    text: decodeHTML(question.question.trim()),\n    choices: formatChoices(combineAllChoices(question)),\n    correct: decodeHTML(question.correct_answer.trim()),\n    incorrect: question.incorrect_answers\n  };\n};\nconst formatAPIQuizData = questions => {\n  return questions.map((question, index) => {\n    return formatQuestion(question, index);\n  });\n};\nconst createQuizData = async () => {\n  try {\n    const questions = await getQuestionsFromAPI();\n    const formattedQuestions = await formatAPIQuizData(questions);\n    return formattedQuestions;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport { createQuizData };","map":{"version":3,"names":["axios","getQuestionsFromAPI","response","get","data","results","err","console","log","decodeHTML","html","txt","document","createElement","innerHTML","value","formatChoices","choices","map","choice","index","text","trim","combineAllChoices","question","correct_answer","split","concat","incorrect_answers","formatQuestion","id","category","type","difficulty","correct","incorrect","formatAPIQuizData","questions","createQuizData","formattedQuestions"],"sources":["C:/Users/user/Desktop/React App/app/src/api/opentdb.js"],"sourcesContent":["import axios from 'axios'\n\nconst getQuestionsFromAPI = async () => {\n    try {\n        const response = await axios.get('https://opentdb.com/api.php?amount=10')\n        return response.data.results\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nconst decodeHTML = (html) => {\n    var txt = document.createElement(\"textarea\")\n    txt.innerHTML = html\n    return txt.value\n}\n\nconst formatChoices = choices => {\n    return choices.map((choice, index) => {\n        return { text: decodeHTML(choice.trim()) }\n    })\n}\nconst combineAllChoices = question => question.correct_answer.split(',').concat(question.incorrect_answers)\n\nconst formatQuestion = (question, index) => {\n    return {\n        id: index,\n        category: question.category,\n        type: question.type,\n        difficulty: question.difficulty,\n        text: decodeHTML(question.question.trim()),\n        choices: formatChoices(combineAllChoices(question)),\n        correct: decodeHTML(question.correct_answer.trim()),\n        incorrect: question.incorrect_answers\n    }\n}\n\nconst formatAPIQuizData = questions => {\n    return questions.map((question, index) => {\n        return formatQuestion(question, index)\n    })\n}\n\nconst createQuizData = async () => {\n    try {\n        const questions = await getQuestionsFromAPI()\n        const formattedQuestions = await formatAPIQuizData(questions)\n        return formattedQuestions\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport { createQuizData }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,uCAAuC,CAAC;IACzE,OAAOD,QAAQ,CAACE,IAAI,CAACC,OAAO;EAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB;AACJ,CAAC;AAED,MAAMG,UAAU,GAAIC,IAAI,IAAK;EACzB,IAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;EAC5CF,GAAG,CAACG,SAAS,GAAGJ,IAAI;EACpB,OAAOC,GAAG,CAACI,KAAK;AACpB,CAAC;AAED,MAAMC,aAAa,GAAGC,OAAO,IAAI;EAC7B,OAAOA,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;IAClC,OAAO;MAAEC,IAAI,EAAEZ,UAAU,CAACU,MAAM,CAACG,IAAI,CAAC,CAAC;IAAE,CAAC;EAC9C,CAAC,CAAC;AACN,CAAC;AACD,MAAMC,iBAAiB,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,cAAc,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACH,QAAQ,CAACI,iBAAiB,CAAC;AAE3G,MAAMC,cAAc,GAAGA,CAACL,QAAQ,EAAEJ,KAAK,KAAK;EACxC,OAAO;IACHU,EAAE,EAAEV,KAAK;IACTW,QAAQ,EAAEP,QAAQ,CAACO,QAAQ;IAC3BC,IAAI,EAAER,QAAQ,CAACQ,IAAI;IACnBC,UAAU,EAAET,QAAQ,CAACS,UAAU;IAC/BZ,IAAI,EAAEZ,UAAU,CAACe,QAAQ,CAACA,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC;IAC1CL,OAAO,EAAED,aAAa,CAACO,iBAAiB,CAACC,QAAQ,CAAC,CAAC;IACnDU,OAAO,EAAEzB,UAAU,CAACe,QAAQ,CAACC,cAAc,CAACH,IAAI,CAAC,CAAC,CAAC;IACnDa,SAAS,EAAEX,QAAQ,CAACI;EACxB,CAAC;AACL,CAAC;AAED,MAAMQ,iBAAiB,GAAGC,SAAS,IAAI;EACnC,OAAOA,SAAS,CAACnB,GAAG,CAAC,CAACM,QAAQ,EAAEJ,KAAK,KAAK;IACtC,OAAOS,cAAc,CAACL,QAAQ,EAAEJ,KAAK,CAAC;EAC1C,CAAC,CAAC;AACN,CAAC;AAED,MAAMkB,cAAc,GAAG,MAAAA,CAAA,KAAY;EAC/B,IAAI;IACA,MAAMD,SAAS,GAAG,MAAMpC,mBAAmB,CAAC,CAAC;IAC7C,MAAMsC,kBAAkB,GAAG,MAAMH,iBAAiB,CAACC,SAAS,CAAC;IAC7D,OAAOE,kBAAkB;EAC7B,CAAC,CAAC,OAAOjC,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB;AACJ,CAAC;AAED,SAASgC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}